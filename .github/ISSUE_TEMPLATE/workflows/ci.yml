name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    name: 🔧 Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: 📦 Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: 🔍 Run ESLint
      run: |
        cd backend
        npm run lint
        
    - name: 🧪 Run tests
      run: |
        cd backend
        npm test
        
    - name: 📊 Test coverage
      run: |
        cd backend
        npm run test:coverage

  frontend-tests:
    name: 🎨 Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 📦 Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: 🔍 TypeScript check
      run: |
        cd frontend
        npm run type-check
        
    - name: 🎨 Run ESLint
      run: |
        cd frontend
        npm run lint
        
    - name: 🏗️ Build check
      run: |
        cd frontend
        npm run build
        
    - name: 🧪 Run tests
      run: |
        cd frontend
        npm test

  security-scan:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔒 Run security audit
      run: |
        cd backend && npm audit --audit-level moderate
        cd ../frontend && npm audit --audit-level moderate
        
    - name: 🕵️ CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        
    - name: 🏗️ Autobuild
      uses: github/codeql-action/autobuild@v3
      
    - name: 📊 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  deployment:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, security-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐳 Build Docker images
      run: |
        docker-compose -f docker-compose.yml build
        
    - name: 🧪 Test Docker containers
      run: |
        docker-compose -f docker-compose.yml up -d
        sleep 30
        curl -f http://localhost:3000 || exit 1
        curl -f http://localhost:8000/api/health || exit 1
        docker-compose -f docker-compose.yml down
        
    - name: ✅ Deployment successful
      run: echo "🎉 Deployment completed successfully!"
